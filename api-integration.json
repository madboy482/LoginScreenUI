{
  "api": {
    "login": {
      "endpoint": "https://api.example.com/login",
      "method": "POST",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "email": "user_email",
        "password": "user_password"
      },
      "responses": {
        "success": {
          "status": 200,
          "data": {
            "token": "jwt_token_example",
            "user": {
              "id": "user_id",
              "email": "user_email",
              "name": "User Name"
            }
          }
        },
        "error": {
          "status": 401,
          "message": "Invalid credentials"
        }
      }
    },
    "register": {
      "endpoint": "https://api.example.com/register",
      "method": "POST",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "email": "user_email",
        "password": "user_password",
        "name": "user_name"
      },
      "responses": {
        "success": {
          "status": 201,
          "message": "User created successfully"
        },
        "error": {
          "status": 400,
          "message": "Email already in use"
        }
      }
    },
    "resetPassword": {
      "endpoint": "https://api.example.com/reset-password",
      "method": "POST",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "email": "user_email"
      },
      "responses": {
        "success": {
          "status": 200,
          "message": "Password reset email sent"
        },
        "error": {
          "status": 404,
          "message": "Email not found"
        }
      }
    }
  },
  "implementation_notes": {
    "login": "Replace the setTimeout in LoginScreen.js with an actual API call using fetch or axios",
    "authentication": "Store the JWT token in AsyncStorage for persistent sessions",
    "security": "Consider using a library like react-native-keychain for storing sensitive information"
  }
}
